@import '~@angular/material/theming';
@import './vars/typography';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$candy-app-primary: mat-palette($mat-light-blue, 600);
$candy-app-accent:  mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$candy-app-warn:    mat-palette($mat-red);

$hs-typography: mat-typography-config(
  $font-family: ''+$theme-font-family
);
@include angular-material-typography($hs-typography);

// Create the theme object (a Sass map containing all of the palettes).
$candy-app-theme: mat-light-theme($candy-app-primary, $candy-app-accent, $candy-app-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($candy-app-theme);

.mat-drawer-container {
  background: #fff;
}

.mat-drawer-side {
  border-right-color: rgba(black, 0.04);
}

.mat-drawer-inner-container {
  overflow: hidden !important;
}

.mat-tooltip {
  margin: 2px !important;
  background: rgba(black, 0.2);
}

.mat-dialog-container {
  padding: 0 !important;
}


.sp-gallery-modal {
  overflow: auto;
}
